/*jslint node: true */
'use strict';

/*
Problem URL: 
https://projecteuler.net/problem=2

Problem statement:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
*/

// Initialize the variables described in the problem statement.
var term_n_minus_2 = 1;
var term_n_minus_1 = 2;
var max_term_value = 4000000;

// We will start the loop below assuming we are on the 2nd term of the Fibonacci sequence.
var term_n = term_n_minus_1;
// The sum variable will hold the desired return value. Initialize it with 0.
var sum = 0;

// We only want to continue the operation as long as the value of our nth term doesn't exceed the max term value.
while (term_n < max_term_value) {
    // We use the mod operator to check if the nth term's value is even.
    if ((term_n % 2) === 0) {
        // If the nth term's value is even, add it to our running sum.
        sum += term_n;
    }

    // Each of the term value variables can now be updated for the next iteration of the loop.
    term_n = term_n_minus_2 + term_n_minus_1;
    term_n_minus_2 = term_n_minus_1;
    term_n_minus_1 = term_n;
}

console.log("The sum of terms is: " + sum);